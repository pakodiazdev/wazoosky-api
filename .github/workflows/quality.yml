name: Django CI

on:
  push:
    branches: [ master, temp2 ]
  pull_request:
    branches: [ master, temp2 ]

defaults:
  run:
    working-directory: ./code

jobs:
  lint:
    name: Code Quality (Format, Lint & Type Check)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort flake8 mypy

      - name: Run code quality checks
        run: make check

  test:
    name: Run Tests and Coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_wazoosky_db
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: Generic.Secret0987
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U admin"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: test_wazoosky_db
      DB_USER: admin
      DB_PASSWORD: Generic.Secret0987

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -U admin; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Run tests and generate coverage report
        run: make test-with-coverage

      - name: Check if coverage.xml exists
        run: ls -lh coverage.xml

      - name: Upload coverage.xml as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: code/coverage.xml

  sonarcloud:
    name: SonarCloud Scan
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ../coverage-artifact

      - name: List files and print working directory
        run: |
          pwd
          ls -la
          cd ..
          pwd
          ls -la
          cd ..
          pwd
          ls -la
          cd  coverage-artifact
          cat coverage.xml
      #- name: ðŸ§© Add DOCTYPE to coverage.xml
      #  run: |
      #    sed -i '1s|^|<!DOCTYPE coverage SYSTEM "http://cobertura.sourceforge.net/xml/coverage-04.dtd">\n|' /home/runner/work/wazoosky-api/coverage-artifact/coverage.xml
      - name: Cat Coverage.xml
        run: |
          cat /home/runner/work/wazoosky-api/coverage-artifact/coverage.xml
      - name: ðŸ“Š Run SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
